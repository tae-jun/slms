/*global module:false*/
module.exports = function(grunt) {

    // These plugins provide necessary tasks.
    grunt.loadNpmTasks('grunt-contrib-concat');
    grunt.loadNpmTasks('grunt-contrib-uglify');
    grunt.loadNpmTasks('grunt-contrib-qunit');
    grunt.loadNpmTasks('grunt-contrib-jshint');
    grunt.loadNpmTasks('grunt-contrib-watch');

    grunt.loadNpmTasks('grunt-contrib-clean');
    grunt.loadNpmTasks('grunt-contrib-copy');
    grunt.loadNpmTasks('grunt-ts');
    grunt.loadNpmTasks('grunt-karma');

    // Default task.
    grunt.registerTask('default', ['concat', 'clean', 'copy']);
    grunt.registerTask('test', ['ts:test'])

    // Project configuration.
    grunt.initConfig({
        // Metadata.
        distdir: 'dist',
        pkg: grunt.file.readJSON('package.json'),
        src: {
            js: ['src/**/*.js'],
            html: ['src/index.html'],
            css: ['src/**/*.css'],
            ts: ['src/**/*.ts']
        },
        karma: {
            unit: {
                configFile: 'test/karma.conf.js'
            }
        },
        clean: ['<%= distdir %>/**/*'],
        ts: {
            // A specific target
            build: {
                // The source TypeScript files, http://gruntjs.com/configuring-tasks#files
                src: ["<%= src.ts %>"],
                // The source html files, https://github.com/grunt-ts/grunt-ts#html-2-typescript-support   
                //html: ["test/work/**/*.tpl.html"], 
                // If specified, generate this file that to can use for reference management
                //reference: "./test/reference.ts",  
                // If specified, generate an out.js file which is the merged js file
                out: 'src/out.js',
                // If specified, the generate JavaScript files are placed here. Only works if out is not specified
                //outDir: 'test/outputdirectory',
                // If specified, watches this directory for changes, and re-runs the current target
                //watch: 'test',                     
                // Use to override the default options, http://gruntjs.com/configuring-tasks#options
                options: {
                    // 'es3' (default) | 'es5'
                    target: 'es5',
                    // 'amd' (default) | 'commonjs'    
                    module: 'amd',
                    // true (default) | false
                    sourceMap: false,
                    // true | false (default)
                    declaration: false,
                    // true (default) | false
                    removeComments: true
                },
            },
            test: {
                src: ['test/**/*.spec.ts'],
                watch: 'test',
                options: {
                    target: 'es5',
                    sourceMap: true,
                    declaration: false,
                    removeComments: true
                },
            }
        },
        // Task configuration.
        concat: {
            js: {
                src: ['src/out.js'],
                dest: '<%= distdir %>/<%= pkg.name %>.js'
            },
            index: {
                src: ["<%= src.html %>"],
                dest: '<%= distdir %>/index.html',
                options: {
                    process: true
                }
            },
            angular: {
                src: ['vendor/angular/angular.js', 'vendor/angular/angular-resource.js', 'vendor/angular-ui/angular-ui.js'],       // because of dependency, we must order
                dest: '<%= distdir %>/angular.js'
            },
            jquery: {
                src: ['vendor/jquery/*.js', 'vendor/spectrum/*.js'],
                dest: '<%= distdir %>/jquery.js'
            },
            css: {
                src: ['<%= src.css %>', 'vendor/spectrum/*.css'],
                dest: '<%= distdir %>/<%= pkg.name %>.css'
            },
            d3: {
                src: ['vendor/d3/d3.js'],
                dest: '<%= distdir %>/d3.js'
            }
        },
        copy: {
            tpl: {
                files:[
                    {
                        expand: true,
                        cwd: 'src',
                        src: '**/*.tpl.html',
                        dest: '<%= distdir %>',
                        flatten: true,
                        filter: 'isFile'
                    }
                ]
            },
            assets: {
                files: [
                    {
                        expand: true,
                        src: 'assets/**/*',
                        dest: '<%= distdir %>'
                    }
                ]
            }
        },
        uglify: {
            dist: {
                src: '<%= concat.dist.dest %>',
                dest: 'dist/<%= pkg.name %>.min.js'
            }
        },
        watch: {
            autoBuild: {
                files: ['src/**/*.ts', 'src/**/*.css', 'src/**/*.html'],
                tasks: ['default']
            }
        }
    });
};
